// Generated by CoffeeScript 1.6.3
var _this = this;

goog.provide('reAdoptAHydrant.services.Marker');

reAdoptAHydrant.services.Marker = function(UserService, HydrantService) {
  var createMarker, service, _attachCLickEvent, _createAdoptedMarker, _createMarker, _createNormalHydrantMarker, _handleClickEvent;
  createMarker = function(map, hydrant) {
    if (hydrant.adopter) {
      return _createAdoptedMarker(map, hydrant);
    } else {
      return _createNormalHydrantMarker(map, hydrant);
    }
  };
  _createNormalHydrantMarker = function(map, hydrant) {
    var icon, shadow;
    icon = {
      anchor: new google.maps.Point(16, 39),
      size: new google.maps.Size(33, 39),
      url: '/images/normalHydrantMarker.png'
    };
    shadow = {
      anchor: new google.maps.Point(6, 24),
      size: new google.maps.Size(40, 24),
      url: '/images/markerShadow.png'
    };
    return _createMarker(map, hydrant, icon, shadow);
  };
  _createAdoptedMarker = function(map, hydrant) {
    var icon, shadow;
    icon = {
      anchor: new google.maps.Point(21, 39),
      size: new google.maps.Size(42, 39),
      url: '/images/adoptedHydrantMarker.png'
    };
    shadow = {
      anchor: new google.maps.Point(6, 24),
      size: new google.maps.Size(40, 24),
      url: '/images/markerShadow.png'
    };
    return _createMarker(map, hydrant, icon, shadow);
  };
  _createMarker = function(map, hydrant, icon, shadow) {
    var marker, markerOptions;
    markerOptions = {
      map: map,
      animation: google.maps.Animation.DROP,
      position: new google.maps.LatLng(hydrant._source.geo.lat, hydrant._source.geo.lon),
      icon: icon,
      shadow: shadow
    };
    marker = new google.maps.Marker(markerOptions);
    return _attachCLickEvent(marker, hydrant);
  };
  _attachCLickEvent = function(marker, hydrant) {
    marker._id = hydrant._id;
    marker._adopter = hydrant.adopter;
    return google.maps.event.addListener(marker, "click", _handleClickEvent);
  };
  _handleClickEvent = function() {
    var _this = this;
    if (this._adopter) {
      return UserService.getUserById(this._adopter, function(err, user) {
        var content, infowindow;
        if (err) {
          return console.log(err);
        } else {
          content = "<img class='pull-left' src='" + user.pictureUrl + "'><p>Adopted by <strong>" + user.displayName + "</strong>";
          infowindow = new google.maps.InfoWindow({
            content: content
          });
          return infowindow.open(_this.map, _this);
        }
      });
    } else {
      return UserService.getCurrentUser(function(err, user) {
        var confirmation;
        if (user) {
          confirmation = confirm("Do you want to adopt this hydrant?");
          if (confirmation) {
            console.log('confirm', _this);
            return HydrantService.adopt(user._id, _this._id, function(err, callback) {
              if (err) {
                return console.log(err);
              } else {
                _this.setIcon("/images/adoptedHydrantMarker.png");
                return _this._adopter = user._id;
              }
            });
          }
        } else {
          return alert("You must be logged in to adopt an hydrant.");
        }
      });
    }
  };
  service = {
    createMarker: createMarker
  };
  return service;
};
